#系统ID，用于读取权限时过滤和登陆时写日志等
APP_SYS=DataAuth
#当zuul作为网关集成sso时由于下面注册了很多个系统都是自行上报权限的,所以zuul得获得下面所有系统的权限,这里填写管辖的APP_SYS列表用","隔开
APP_SYS_LIST=
#鉴权中心spring MVC URL前缀
authUrlPre=/auth/
#是否使用redis存储用户信息
ssoUseRedis=true

sso.redis.ip=10.80.16.32
sso.redis.port=6379
sso.redis.pass=x43SgnbVGjpGWgQ
#链接数据库默认0到15
sso.redis.database=5
#客户端超时时间单位是毫秒
sso.redis.timeout=10000
sso.redis.preKey=sso:

sso.redis.pool.maxTotal=100
sso.redis.pool.minIdle=10
sso.redis.pool.maxIdle=50

#会话过期时间 单位毫秒7200000比鉴权中心略小点
sso.sessionReserved=7000000
#会话和鉴权中心心跳间隔(秒)
sso.sessionHeartbeatCycle=300
#会话和鉴权中心心跳线程池数量
sso.asynSessionHeartbeatThreadPool=80

#集成系统(外部系统)的IP或者域名,鉴权中心退出时广播或者鉴权中心权限变更时广播,集成系统调用鉴权中心API时主动传过去该参数,如果是http或者https打头那么会拆分出scheme和ip以及端口分别传给鉴权中心,由于是服务端发起调用,如果是同一个IDC机房内那么配置集成系统(外部系统)的nginx地址即可
outSysIP=http://127.0.0.1:5000
#集成系统外网(重定向场景)，代理前缀，建议这里留空，使用应用服务器的contextPath解决(用于解决nginx转发时进行了地址的重写)
proxyContextPath=
#集成系统IDC内网，nginx代理前缀，建议这里留空，使用应用服务器的contextPath解决(用于解决nginx转发时进行了地址的重写)
proxyContextPathLAN=
#SSO鉴权中心的域名以及端口和工程名,线上应该使用的是域名因为都是用在重定向场景
ssoIpPortContextPath=http://127.0.0.1:8180
#如果是同一个IDC机房内那么配置鉴权中心的nginx地址以及端口和工程名
ssoIpPortContextPathLAN=http://127.0.0.1:8180
#权限上报需要扫描的包列表多个用","号分隔开
authRptPackageNames=

#portal 登录成功后显示的名称 cookie key
ssoCustomUserName=ssoCustomUserName
ssoCustomName=ssoCustomName
#portal集成时 原始令牌cookie key
ssoCustomId=ssoCustomId
#tokenId标识
tokenId=biTokenId
#鉴权中心tokenId标识
authTokenId=tokenId
#1或空:会话及权限集成;2:会话集成且返回tSysUser字段;3:只集成会话不返回用户字段,无法识别出具体用户
ssoType=1
#系统集成SSO时使用，以下URL都得是http打头
#auth csrf
ssoCsrfToken=${ssoIpPortContextPathLAN}${authUrlPre}api/o/csrfToken
#sso登录接口，对于某些api接口直接传帐密调用的需要进行静默登录，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可
ssoLogin=${ssoIpPortContextPathLAN}${authUrlPre}api/o/login
#初始化权限拦截信息，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可
ssoInitInterceptURL=${ssoIpPortContextPathLAN}${authUrlPre}out/o/geturlauth
#连接SSO系统验证是否已经登陆,这是重定向的，需要配置鉴权中心的域名以及端口
ssoCheckLogin=${ssoIpPortContextPath}${authUrlPre}out/o/sso/checklogin
#通过token获取用户信息ssoType=1，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可
ssoGetLoginInfoURL=${ssoIpPortContextPathLAN}${authUrlPre}out/o/sso/getlogininfo
#通过token获取用户信息ssoType=2，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可，如果只是不想使用默认权限控制但是还是想保留完整用户信息那么这里可以配置getlogininfo
ssoGetLoginUserInfoURL=${ssoIpPortContextPathLAN}${authUrlPre}out/o/sso/getloginuserinfo
#通过token获取用户信息ssoType=3，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可，如果只是不想使用默认权限控制但是还是想保留完整用户信息那么这里可以配置getlogininfo
ssoGetLoginCheckURL=${ssoIpPortContextPathLAN}${authUrlPre}out/o/sso/getLoginCheck
#向auth系统发送会话心跳，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可
ssoSessionHeartbeat=${ssoIpPortContextPathLAN}${authUrlPre}out/o/sso/sessionHeartbeat
#本地退出通知sso鉴权中心，由于是服务端发起调用，如果是同一个IDC机房内那么配置鉴权中心的nginx地址即可
ssoLogoutNotify=${ssoIpPortContextPathLAN}${authUrlPre}out/o/sso/logout
#刷新外部系统权限接口,该接口在外部系统实现,SSO客户端不需要
#ssoAuthRefresh={SCHEME://IP:PORT/OUTSYS}/authRefresh
#SSO登出,SSO客户端不需要
#ssoLogout={SCHEME://IP:PORT/OUTSYS}/ssoLogout
#SSO系统内部使用
#SSO登录页,由于是在SSO内部进行重定向的所以也不需要http打头
ssoLoginUrl=${authUrlPre}web/o/weblogin
h5ssoLoginUrl=${authUrlPre}app/o/applogin
#SSO会话清理周期,毫秒(外部系统)
ssoSessionClearCycle=3600000
#SSO本地缓存对象清理周期,毫秒(外部系统)
ssoObjClearCycle=3600000
#SSO模拟登录类，登录成功后会回调该类(外部系统)com.weshare.base.sso.LocalLoginDfImpl
ssoLoginClassPath=
#SSO鉴权重定向到SDK URL后自定义业务逻辑，实现com.weshare.base.sso.SSOCallback接口,废弃：ssoLoginClassPath这个能实现一样的功能
#ssoCallbackClassPath=edp.auth.AuthCenterLoginImpl
#sso本地注册是否成功延迟检测时长,单位毫秒,该时间还受刷新间隔时间影响
ssoRegLocalErrCheckDelay=10000
#SSO预会话key前缀
ssoPreKey=P:
#密码加密类
passwordEncryptClassPath=com.weshare.base.component.login.impl.PasswordEncryptImpl


#无权访问时跳转页面
permissionDeniedPage=${authUrlPre}web/o/permissiondenied
#后台页面无权限跳转页
adminPermissionDeniedPage=${authUrlPre}web/o/adminpermissiondenied
#H5无权访问时跳转页面
h5PermissionDeniedPage=${authUrlPre}app/o/apppermissiondenied
#网络环境变化提示页
safeErrPage=${authUrlPre}com/o/safeErrPage
#鉴权同步失败跳转页面APP,内部登陆页，不需要http打头
H5AuthSynErrPage=${authUrlPre}app/o/appAuthSynErrPage
#鉴权同步失败跳转页面WEB,内部登陆页，不需要http打头
authSynErrPage=${authUrlPre}app/o/authSynErrPage
#登陆页,内部登陆页，不需要http打头
loginPage=${authUrlPre}web/o/weblogin
#H5登陆页,内部登陆页，不需要http打头
h5LoginPage=${authUrlPre}app/o/applogin
#psId前缀,只能4位,每个集成系统必须不一样，由鉴权中心开发管理者统一分配
authRptIdPre=1000
#权限上报接口,上报到鉴权中心nginx
authorityReporting=${ssoIpPortContextPathLAN}${authUrlPre}api/o/authRpt
#参数权限上报接口,上报到鉴权中心nginx
paraAuthorityReporting=${ssoIpPortContextPathLAN}${authUrlPre}api/o/paraAuthRpt
delParaAuthorityReporting=${ssoIpPortContextPathLAN}${authUrlPre}api/o/delParaAuthRpt
default_user_groupIds=
default_user_roleIds=
default_user_psIds=